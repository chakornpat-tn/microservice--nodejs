// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cart {
  id Int @id @default(autoincrement())
  customerId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  lineItems CartLineItem[]
}

model CartLineItem {
  id Int @id @default(autoincrement())
  productId Int
  cartId Int
  itemName String
  variant String?
  qty Int
  price Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  cart Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
}

model Order {
  id          Int            @id @default(autoincrement())
  orderNumber Int            @unique
  customerId  Int
  amount      Float
  status      String         @default("pending")
  txnId       String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now())
  lineItems   OrderLineItem[]
}

model OrderLineItem {
  id        Int      @id @default(autoincrement())
  itemName  String
  qty       Int
  price     Float
  orderId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model OrderOutboxEvent {
  id          Int      @id @default(autoincrement())
  eventType   String
  source      String
  payload     Json
  timestamp   DateTime @default(now())
  processed   Boolean  @default(false)
  publishedAt DateTime?
  topic       String
  key         String
}
